- if @links && !@links.blank?
  - @links = Array.new(1, @links) if @links.is_a?(Link)
  - @links.each do |link|
    .stream-item{:id => link.id}
      .stream-item-content.tweet{:class => fav_class_detection(link.id), "data-link_id" => link.id }
        .more
        - unless @link_extented
          .tweet-dogear
          .tweet-image
            = show_favicon(link.url)
        .tweet-content
          .tweet-row
            .tweet-text.js-tweet-text

            -#= @link_extented ? link.description.strip : truncate(link.description.strip, :length => 150)

            = @link_extented ? link.description.html_safe : truncate(link.description.html_safe, :length => 150)
            = link_to show_domain_only(link.url), link.url, :target => "_blank"
          .tweet-row.fav
            %span.tweet-actions.js-actions
              %span.tweet-action.action-favorite

                - if current_user
                  - if !is_favorited?(link.id)
                    %a.favorite-action.js-toggle-fav{"data-favorited" => "false", :href => "#"}
                      %div.fav_wrap
                        .fav_un_orited.h
                          = form_for Favorit.new, :remote => true do |f|
                            = f.number_field :user_id, :value => current_user.id
                            = f.number_field :link_id, :value => link.id
                            = f.submit 'Save'
                        %i
                        %b= t(:favorite)
                  - else
                    %a.unfavorite-action.js-toggle-fav{"data-favorited" => "false", :href => "#"}
                      %div.fav_wrap
                        .fav_un_orited.h
                        %i
                        %b= link_to t(:unfavorite), current_user.favorits.where(:link_id => link.id).first, :link_id =>'12344', :method => :delete, :remote => true
  - if @link_extented
    = form_for 'comment', :url => link_comments_path(@links), :id => 'adding_comment_form', :remote => true do |f|
      = f.text_area :body
      .clearfix
      = button_tag(:type => 'submit', :class=> 'btn primary submit') do
        = t(:add_comment)
    .clearfix
    .comments_place= render :partial => "comments/comment"
- else
  %h2= t(:no_result)